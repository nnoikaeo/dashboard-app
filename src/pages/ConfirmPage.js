import React, { useEffect, useState } from "react";
import { useNavigate, useSearchParams } from "react-router-dom";
import { collection, query, where, getDocs, updateDoc } from "firebase/firestore";
import { db } from "../firebase";

function ConfirmPage() {
  const [searchParams] = useSearchParams();
  const navigate = useNavigate();
  const [status, setStatus] = useState("loading");

  useEffect(() => {
    const confirmEmail = async () => {
      const email = searchParams.get("email");
      if (!email) return setStatus("invalid");
  
      try {
        console.log("üîç ‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô‡∏≠‡∏µ‡πÄ‡∏°‡∏•:", email);
      
        const inviteQuery = query(collection(db, "invites"), where("email", "==", email));
        const inviteSnap = await getDocs(inviteQuery);
        console.log("üéØ invites found:", inviteSnap.size);
      
        const userQuery = query(collection(db, "users"), where("email", "==", email));
        const userSnap = await getDocs(userQuery);
        console.log("üë• users found:", userSnap.size);
      
        if (userSnap.empty || inviteSnap.empty) {
          return setStatus("not_found");
        }
      
        const inviteDoc = inviteSnap.docs[0];
        const userDoc = userSnap.docs[0];
      
        await updateDoc(inviteDoc.ref, { confirmedAt: new Date() });
        await updateDoc(userDoc.ref, { status: "active" });
      
        console.log("‚úÖ ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à‡πÅ‡∏•‡πâ‡∏ß");
      
        setStatus("success");
        setTimeout(() => navigate("/login"), 2500);
      } catch (err) {
        console.error("üî• ERROR:", err.message);
        setStatus("error");
      }
    };

    confirmEmail(); // ‡∏ï‡πâ‡∏≠‡∏á‡∏≠‡∏¢‡∏π‡πà‡∏ô‡∏≠‡∏Å function ‡πÅ‡∏•‡πâ‡∏ß‡πÄ‡∏£‡∏µ‡∏¢‡∏Å‡∏´‡∏•‡∏±‡∏á‡∏õ‡∏¥‡∏î {}
  }, [searchParams, navigate]);

  return (
    <div style={{ padding: 40, textAlign: "center" }}>
      {status === "loading" && <p>üîÑ ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô‡∏Å‡∏≤‡∏£‡∏•‡∏á‡∏ó‡∏∞‡πÄ‡∏ö‡∏µ‡∏¢‡∏ô...</p>}
      {status === "success" && <p style={{ color: "green" }}>‚úÖ ‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢! ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏ô‡∏≥‡∏Ñ‡∏∏‡∏ì‡πÑ‡∏õ‡∏¢‡∏±‡∏á‡∏´‡∏ô‡πâ‡∏≤‡πÄ‡∏Ç‡πâ‡∏≤‡∏™‡∏π‡πà‡∏£‡∏∞‡∏ö‡∏ö...</p>}
      {status === "invalid" && <p style={{ color: "red" }}>üìõ ‡∏•‡∏¥‡∏á‡∏Å‡πå‡πÑ‡∏°‡πà‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á</p>}
      {status === "not_found" && <p style={{ color: "red" }}>‚ùå ‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏ö‡∏±‡∏ç‡∏ä‡∏µ‡∏ó‡∏µ‡πà‡πÄ‡∏ä‡∏¥‡∏ç‡πÉ‡∏ô‡∏£‡∏∞‡∏ö‡∏ö</p>}
      {status === "error" && <p style={{ color: "red" }}>‚ö†Ô∏è ‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏•‡∏≠‡∏á‡πÉ‡∏´‡∏°‡πà</p>}
    </div>
  );
}

export default ConfirmPage;

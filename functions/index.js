const { onRequest } = require("firebase-functions/v2/https");
const logger = require("firebase-functions/logger");
const nodemailer = require("nodemailer");
// const cors = require("cors")({ origin: true });

const gmailEmail = process.env.GMAIL_EMAIL;
const gmailPassword = process.env.GMAIL_PASSWORD;

const transporter = nodemailer.createTransport({
  service: "gmail",
  auth: {
    user: gmailEmail,
    pass: gmailPassword,
  },
});

// ‚úÖ Gen 2 Function ‡πÅ‡∏ö‡∏ö‡πÉ‡∏´‡∏°‡πà
exports.sendInviteEmail = onRequest(
  {
    secrets: ["GMAIL_EMAIL", "GMAIL_PASSWORD"],
    cors: true, // ‚úÖ Gen 2 ‡∏°‡∏µ CORS ‡πÉ‡∏ô config ‡πÑ‡∏î‡πâ‡πÄ‡∏•‡∏¢
    region: "us-central1", // ‚úÖ ‡∏£‡∏∞‡∏ö‡∏∏ region ‡πÄ‡∏´‡∏°‡∏∑‡∏≠‡∏ô‡πÄ‡∏î‡∏¥‡∏°
  },
  async (req, res) => {
    if (req.method !== "POST") {
      return res.status(405).send("Method Not Allowed");
    }

    const { email, name, inviteLink } = req.body;

    const mailOptions = {
      from: `Streamwash Dashboard <${gmailEmail}>`,
      to: email,
      subject: "üì© ‡∏Ñ‡∏≥‡πÄ‡∏ä‡∏¥‡∏ç‡πÄ‡∏Ç‡πâ‡∏≤‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô‡∏£‡∏∞‡∏ö‡∏ö‡πÅ‡∏î‡∏ä‡∏ö‡∏≠‡∏£‡πå‡∏î",
      html: ` <!-- ‚Üê ‡πÅ‡∏Å‡πâ‡∏ï‡∏£‡∏á‡∏ô‡∏µ‡πâ -->
        <p>‡∏Ñ‡∏∏‡∏ì‡πÑ‡∏î‡πâ‡∏£‡∏±‡∏ö‡∏Ñ‡∏≥‡πÄ‡∏ä‡∏¥‡∏ç‡πÉ‡∏´‡πâ‡πÄ‡∏Ç‡πâ‡∏≤‡∏£‡πà‡∏ß‡∏°‡∏£‡∏∞‡∏ö‡∏ö‡πÅ‡∏î‡∏ä‡∏ö‡∏≠‡∏£‡πå‡∏î‡∏Ç‡∏≠‡∏á ‡∏ö‡∏£‡∏¥‡∏©‡∏±‡∏ó ‡∏™‡∏ó‡∏£‡∏µ‡∏°‡∏ß‡∏≠‡∏ä (‡∏õ‡∏£‡∏∞‡πÄ‡∏ó‡∏®‡πÑ‡∏ó‡∏¢) ‡∏à‡∏≥‡∏Å‡∏±‡∏î</p>
        <p>‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏Å‡∏î‡∏õ‡∏∏‡πà‡∏°‡∏î‡πâ‡∏≤‡∏ô‡∏•‡πà‡∏≤‡∏á‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô‡∏Å‡∏≤‡∏£‡∏•‡∏á‡∏ó‡∏∞‡πÄ‡∏ö‡∏µ‡∏¢‡∏ô:</p>
        <p style="text-align: center; margin: 30px 0;">
          <a href="${inviteLink}" target="_blank" style="
            background-color: #002D8B;
            color: white;
            padding: 12px 24px;
            text-decoration: none;
            font-weight: bold;
            border-radius: 8px;
            display: inline-block;
          ">
            ‚úÖ ‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô‡∏Å‡∏≤‡∏£‡∏•‡∏á‡∏ó‡∏∞‡πÄ‡∏ö‡∏µ‡∏¢‡∏ô
          </a>
        </p>
        <p>‡∏´‡∏≤‡∏Å‡∏Ñ‡∏∏‡∏ì‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ‡∏£‡πâ‡∏≠‡∏á‡∏Ç‡∏≠‡∏Å‡∏≤‡∏£‡πÄ‡∏ä‡∏¥‡∏ç‡∏ô‡∏µ‡πâ ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏•‡∏∞‡πÄ‡∏ß‡πâ‡∏ô‡∏≠‡∏µ‡πÄ‡∏°‡∏•‡∏ô‡∏µ‡πâ</p>
        <p>‡∏Ç‡∏≠‡∏ö‡∏Ñ‡∏∏‡∏ì‡∏Ñ‡∏£‡∏±‡∏ö/‡∏Ñ‡πà‡∏∞<br/>‡∏ó‡∏µ‡∏°‡∏á‡∏≤‡∏ô‡∏£‡∏∞‡∏ö‡∏ö‡πÅ‡∏î‡∏ä‡∏ö‡∏≠‡∏£‡πå‡∏î</p>
      `
    };

    try {
      await transporter.sendMail(mailOptions);
      res.status(200).json({ success: true });
    } catch (error) {
      logger.error("‚ùå Error sending email:", error);
      res.status(500).json({ success: false, message: "‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏™‡πà‡∏á‡∏≠‡∏µ‡πÄ‡∏°‡∏•‡πÑ‡∏î‡πâ" });
    }
  }
);
